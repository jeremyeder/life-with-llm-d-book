# ServiceAccount Management for llm-d Inference Workloads
#
# This configuration provides secure ServiceAccount patterns for inference services
# with minimal required permissions and security hardening.
#
# Key features:
# - Dedicated ServiceAccounts per inference service
# - Minimal permission grants (principle of least privilege)
# - Security context hardening
# - Automatic token mounting disabled
#
# Usage:
#   kubectl apply -f serviceaccount-management.yaml
#
# See: docs/07-security-compliance.md#serviceaccount-management-for-inference-workloads

# Dedicated ServiceAccount for model serving
apiVersion: v1
kind: ServiceAccount
metadata:
  name: llama-3.1-inference-sa
  namespace: production
  annotations:
    # Disable automatic token mounting for security
    kubernetes.io/enforce-mountable-secrets: "true"
automountServiceAccountToken: false

---
# Role for inference service operations
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: production
  name: inference-service-role
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get", "list"]
  resourceNames: ["model-config", "inference-config"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get"]
  resourceNames: ["model-credentials", "api-keys"]

---
# Bind role to ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: inference-service-binding
  namespace: production
subjects:
- kind: ServiceAccount
  name: llama-3.1-inference-sa
  namespace: production
roleRef:
  kind: Role
  name: inference-service-role
  apiGroup: rbac.authorization.k8s.io

---
# Secure inference service deployment
apiVersion: serving.llm-d.ai/v1alpha1
kind: InferenceService
metadata:
  name: llama-3.1-8b-secure
  namespace: production
spec:
  model:
    name: "meta-llama/Llama-3.1-8B-Instruct"
    source: "huggingface"
  
  deployment:
    serviceAccountName: llama-3.1-inference-sa
    
    # Security context
    securityContext:
      runAsNonRoot: true
      runAsUser: 1000
      runAsGroup: 3000
      fsGroup: 2000
      seccompProfile:
        type: RuntimeDefault
      
    # Pod security
    podSecurityContext:
      fsGroupChangePolicy: "OnRootMismatch"
      
    # Container security
    containerSecurityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        drop:
        - ALL