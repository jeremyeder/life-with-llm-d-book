# Network Security Policies for llm-d Deployments
#
# This configuration implements comprehensive network-level security controls
# including model isolation, API gateway protection, and monitoring access.
#
# Key security features:
# - Model server isolation from external traffic
# - Controlled access through inference gateway
# - Monitoring system access controls
# - DNS resolution permissions
# - Egress controls for model downloads
#
# Usage:
#   kubectl apply -f network-policies.yaml
#
# See: docs/07-security-compliance.md#model-protection-and-access-controls

# Network policy for model protection
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: model-isolation-policy
  namespace: production
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: model-server
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Only allow traffic from inference gateway
  - from:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: inference-gateway
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow health checks from monitoring
  - from:
    - namespaceSelector:
        matchLabels:
          name: monitoring
    ports:
    - protocol: TCP
      port: 8080  # Health check port
  
  egress:
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # Allow model downloads (if needed)
  - to: []
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80

---
# API Gateway network policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-policy
  namespace: production
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/component: inference-gateway
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  # Allow external traffic to API gateway
  - from: []
    ports:
    - protocol: TCP
      port: 8080
  
  egress:
  # Allow communication with model servers
  - to:
    - podSelector:
        matchLabels:
          app.kubernetes.io/component: model-server
    ports:
    - protocol: TCP
      port: 8000
  
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53
  
  # Allow authentication services
  - to:
    - namespaceSelector:
        matchLabels:
          name: auth-system
    ports:
    - protocol: TCP
      port: 443

---
# Monitoring access policy
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: monitoring-access-policy
  namespace: monitoring
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: prometheus
  policyTypes:
  - Egress
  
  egress:
  # Allow access to all namespaces for metrics collection
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 8080  # Metrics port
    - protocol: TCP
      port: 9090  # Prometheus port
  
  # Allow DNS resolution
  - to: []
    ports:
    - protocol: UDP
      port: 53

---
# Default deny policy for production namespace
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
  namespace: production
spec:
  podSelector: {}
  policyTypes:
  - Ingress
  - Egress