[pytest]
# Enhanced test configuration for comprehensive content validation

# Test discovery patterns
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --maxfail=3
    --cov=examples
    --cov=docs/cost-optimization
    --cov=docs/security-configs
    --cov-report=term-missing
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=0
    --durations=10

# Enhanced test markers for content validation
markers =
    unit: Unit tests (fast)
    integration: Integration tests (slower)
    gpu: Tests requiring GPU mocking
    slow: Slow tests
    k8s: Tests requiring Kubernetes API mocking
    content: Content validation tests
    accuracy: Mathematical accuracy tests
    consistency: Cross-chapter consistency tests
    syntax: YAML and markdown syntax tests
    links: Cross-reference and link validation tests
    claims: Technical claims fact-checking tests

# Additional settings
timeout = 300
timeout_method = thread
asyncio_mode = auto

# Ignore paths
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    node_modules
    venv
    __pycache__
    htmlcov
    .coverage

# Test output formatting
console_output_style = progress
junit_family = xunit2

# Logging configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Coverage settings are in .coveragerc