name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test-python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        
    - name: Run tests with pytest
      run: |
        pytest --cov=examples --cov=docs/cost-optimization --cov=docs/security-configs \
               --cov-report=xml --cov-report=term-missing \
               --junit-xml=pytest-results.xml
               
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: python
        name: codecov-umbrella
        
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: pytest-results-${{ matrix.python-version }}
        path: pytest-results.xml

  test-docusaurus:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build Docusaurus site
      run: npm run build
      
    - name: Test serve
      run: |
        npm run serve &
        sleep 10
        curl -f http://localhost:3000/ || exit 1
        pkill -f "docusaurus serve"

  validate-content:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Lint markdown
      run: npm run lint
      
    - name: Spell check
      run: npm run spell
      
    - name: Run validation scripts
      run: |
        chmod +x scripts/*.sh
        ./scripts/run-all-validations.sh

  validate-costs:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install numpy pandas
        
    - name: Validate cost calculations
      run: |
        make validate-costs
        
    - name: Test cost calculations
      run: |
        make test-costs

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run security scan on Python dependencies
      uses: pypa/gh-action-pip-audit@v1.0.8
      with:
        inputs: requirements-test.txt
        
    - name: Run npm audit
      run: npm audit --audit-level=moderate