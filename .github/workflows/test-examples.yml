name: Test Examples with Coverage

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'examples/**/*.py'
      - 'docs/cost-optimization/*.py'
      - 'docs/security-configs/*.py'
      - 'llm-d-book-examples/**/*.py'
      - 'tests/**/*.py'
      - 'requirements-test.txt'
      - 'pytest.ini'
      - '.coveragerc'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**/*.py'
      - 'docs/cost-optimization/*.py'
      - 'docs/security-configs/*.py'
      - 'llm-d-book-examples/**/*.py'
      - 'tests/**/*.py'
      - 'requirements-test.txt'
      - 'pytest.ini'
      - '.coveragerc'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    
    - name: Run linting
      run: |
        # Run ruff for linting
        ruff check examples/ docs/cost-optimization/ docs/security-configs/ tests/
    
    - name: Run type checking
      run: |
        # Run mypy for type checking
        mypy --ignore-missing-imports examples/ docs/cost-optimization/ docs/security-configs/
      continue-on-error: true  # Don't fail on type errors initially
    
    - name: Run tests with coverage
      run: |
        pytest -v --cov --cov-report=xml --cov-report=term
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-${{ matrix.python-version }}
        fail_ci_if_error: false
    
    - name: Generate coverage report comment
      if: github.event_name == 'pull_request'
      uses: py-cov-action/python-coverage-comment-action@v3
      with:
        GITHUB_TOKEN: ${{ github.token }}
        MINIMUM_GREEN: 85
        MINIMUM_ORANGE: 70
    
    - name: Check coverage threshold
      run: |
        coverage report --fail-under=80
    
    - name: Upload coverage HTML report
      uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: coverage-report-${{ matrix.python-version }}
        path: htmlcov/
        retention-days: 7
  
  test-notebooks:
    runs-on: ubuntu-latest
    if: false  # Disabled for now, enable when notebook tests are added
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install nbval jupyter
    
    - name: Test Jupyter notebooks
      run: |
        pytest --nbval-lax examples/**/*.ipynb
  
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run Bandit security scan
      uses: gaurav-nelson/bandit-action@v1
      with:
        path: "examples/ docs/cost-optimization/ docs/security-configs/"
        level: medium
        confidence: medium
        exit_zero: true  # Don't fail the build on security issues
  
  publish-results:
    needs: [test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Download coverage reports
      uses: actions/download-artifact@v3
      with:
        path: coverage-reports
    
    - name: Create coverage badge
      uses: cicirello/jacoco-badge-generator@v2
      with:
        coverage-badge-filename: coverage.svg
        generate-coverage-badge: true
        coverage-label: Coverage
        colors: '#4c1 #97CA00 #a4a61d #dfb317 #fe7d37 #e05d44'
        intervals: '100 90 80 70 60 0'