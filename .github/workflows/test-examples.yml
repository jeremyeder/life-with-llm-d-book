name: Test Examples with Coverage

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'examples/**/*.py'
      - 'docs/cost-optimization/*.py'
      - 'docs/security-configs/*.py'
      - 'llm-d-book-examples/**/*.py'
      - 'tests/**/*.py'
      - 'requirements-test.txt'
      - 'pytest.ini'
      - '.coveragerc'
  pull_request:
    branches: [ main ]
    paths:
      - 'examples/**/*.py'
      - 'docs/cost-optimization/*.py'
      - 'docs/security-configs/*.py'
      - 'llm-d-book-examples/**/*.py'
      - 'tests/**/*.py'
      - 'requirements-test.txt'
      - 'pytest.ini'
      - '.coveragerc'

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements-test.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install test dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
    
    - name: Run tests
      run: |
        pytest tests/ -v
  
  test-notebooks:
    runs-on: ubuntu-latest
    if: false  # Disabled for now, enable when notebook tests are added
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-test.txt
        pip install nbval jupyter
    
    - name: Test Jupyter notebooks
      run: |
        pytest --nbval-lax examples/**/*.ipynb
  
  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install bandit
      run: pip install bandit[toml]
    
    - name: Run Bandit security scan
      run: |
        bandit -r examples/ docs/cost-optimization/ docs/security-configs/ -f json -o bandit-report.json || true
        bandit -r examples/ docs/cost-optimization/ docs/security-configs/ || true
      continue-on-error: true  # Don't fail the build on security issues
  
